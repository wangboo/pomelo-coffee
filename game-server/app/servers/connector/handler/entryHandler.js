// Generated by CoffeeScript 1.7.1
var Handler, log, sync;

log = require('pomelo-logger').getLogger('entryHandler');

sync = require('sync');

module.exports = function(app) {
  return new Handler(app);
};

Handler = (function() {
  function Handler(app) {
    this.app = app;
  }

  Handler.prototype.entry = function(msg, session, next) {
    return sync.waterFall([
      function(cb) {
        return UserBase.findOne({
          username: msg.username
        }, function(err, user) {
          if (err) {
            return next.server_err();
          } else if (users === null) {
            return cb("账号不存在");
          } else if (user.password === msg.password) {
            return cb(null, user);
          } else {
            return cb("账号密码错误");
          }
        });
      }, function(user, cb) {
        return user.set_online(cb);
      }
    ], function(err) {
      if (err) {
        return next.fail(err);
      } else {
        return next.suc;
      }
    });
  };

  Handler.prototype.regist = function(msg, session, next) {
    var UserBase;
    log.debug('regist', msg);
    UserBase = this.app.models.UserBase;
    return UserBase.create({
      username: msg.username,
      password: msg.password
    }, function(err, users) {
      var rst;
      return rst = err ? next.fail('用户名已经存在') : next.suc();
    });
  };

  return Handler;

})();
